/*------------------------------------------------------------------------------
 * Author:              Craig Gibson
 * Project:             Movie Store
 * File name:           ServerStartupGUI Class(MainGUI to start and stop Server)
 * Date created:        16/11/2016
 * Operating System:    -Windows 7
 *                      -64 bit OS
 * 
 * Class Description :  This GUI allows the user to start and stop the 
 *                      operations being performed by the server, which is
 *                      listening for requests that come in from the client.
 -----------------------------------------------------------------------------*/
package vidstore.projectserver;

import java.awt.Color;
import java.util.Vector;
import javax.swing.WindowConstants;
import org.apache.xmlrpc.*;

public class ServerStartupGUI extends javax.swing.JFrame {

    Server serv;

    public ServerStartupGUI(Server sr) {
        serv = sr;
        initComponents();
        this.setLocationRelativeTo(null);
        this.getRootPane().setDefaultButton(strtServer);
        this.setDefaultCloseOperation(javax.swing.JFrame.EXIT_ON_CLOSE);
        shtdwnServer.setEnabled(false);
        shtdwnServer.setBackground(Color.GRAY);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        instructions = new javax.swing.JLabel();
        strtServer = new javax.swing.JButton();
        shtdwnServer = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Server Startup/Shutdown");

        instructions.setText("Server Start or Shutdown");

        strtServer.setBackground(new java.awt.Color(0, 255, 0));
        strtServer.setText("Start");
        strtServer.setToolTipText("Start running the server");
        strtServer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                strtServerActionPerformed(evt);
            }
        });

        shtdwnServer.setBackground(new java.awt.Color(240, 0, 0));
        shtdwnServer.setText("Shutdown");
        shtdwnServer.setToolTipText("Stop the server from running");
        shtdwnServer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                shtdwnServerActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addComponent(strtServer, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 45, Short.MAX_VALUE)
                .addComponent(shtdwnServer, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(20, 20, 20))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(instructions, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(84, 84, 84))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(38, 38, 38)
                .addComponent(instructions, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(44, 44, 44)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(strtServer, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(shtdwnServer, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(40, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void strtServerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_strtServerActionPerformed
        serv.sStart();
        strtServer.setEnabled(false);
        shtdwnServer.setBackground(Color.RED);
        shtdwnServer.setEnabled(true);
        strtServer.setBackground(Color.GRAY);
    }//GEN-LAST:event_strtServerActionPerformed

    private void shtdwnServerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_shtdwnServerActionPerformed
        //This makes the server shut down and close when shutdown is chosen
        //otherwise the server will keep running indefinitely
        serv.sStop();
        strtServer.setEnabled(true);
        strtServer.setBackground(Color.GREEN);
        shtdwnServer.setBackground(Color.GRAY);
        shtdwnServer.setEnabled(false);
    }//GEN-LAST:event_shtdwnServerActionPerformed
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel instructions;
    private javax.swing.JButton shtdwnServer;
    private javax.swing.JButton strtServer;
    // End of variables declaration//GEN-END:variables
}
