/*------------------------------------------------------------------------------
 * Author:              Craig Gibson
 * Project:             Movie Store
 * File name:           adminLogonGUI Class
 * Date created:        16/11/2016
 * Operating System:    -Windows 7
 *                      -64 bit OS
 * 
 * Class Description :  This is the GUI that allows a user to log on and start
 *                      or stop the server. It checks the values entered against
 *                      the database.
 -----------------------------------------------------------------------------*/
package vidstore.projectserver;

import java.sql.*;
import javax.swing.*;

/**
 * This is the logon GUI that will allow the user access to start the database
 * or shutdown the database.
 *
 * @author MB2013-0157 (Craig Gibson)
 */
public class adminLogonGUI extends javax.swing.JFrame {

    Server sv;
    /**
     * 
     */
    public String uName;
    /**
     *
     */
    public String pWord;
    Connection connection;
    String driverName = "sun.jdbc.odbc.JdbcOdbcDriver";
    String sourceURL = "jdbc:odbc:vidStore";

    /**
     * Constructor for the Client GUI and storing an instance of the class
     * to allow us to use the methods that have been provided.
     *
     * @param server 
     */
    public adminLogonGUI(Server server) {
        sv = server;
        initComponents();
        this.setLocationRelativeTo(null);
        this.getRootPane().setDefaultButton(loginButton);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        loginLabel = new javax.swing.JLabel();
        usernameLabel = new javax.swing.JLabel();
        pswordLabel = new javax.swing.JLabel();
        usernameTB = new javax.swing.JTextField();
        pswrdTB = new javax.swing.JPasswordField();
        loginButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Login Window");
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        loginLabel.setText("Please log in with your username and password:");

        usernameLabel.setText("Username:");

        pswordLabel.setText("Password:");

        loginButton.setText("Login");
        loginButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                loginButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(loginButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(usernameLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 71, Short.MAX_VALUE)
                            .addComponent(pswordLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(usernameTB)
                            .addComponent(pswrdTB, javax.swing.GroupLayout.DEFAULT_SIZE, 132, Short.MAX_VALUE)))
                    .addComponent(loginLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(loginLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(usernameLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(usernameTB, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(25, 25, 25)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(pswordLabel)
                    .addComponent(pswrdTB, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(loginButton, javax.swing.GroupLayout.DEFAULT_SIZE, 45, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    //Logon button must login and check if the unsername and password 
    //combination exist in the database of users.
    private void loginButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_loginButtonActionPerformed
        System.out.println("Attempting to connect...");

        //Get the username and password from the text fields
        uName = usernameTB.getText();
        pWord = pswrdTB.getText();

        //Construct the query and call the connect method sending the query
        // to retrieve the login details
        String query = "SELECT * FROM adminUsers WHERE user_name = "
                + "'" + uName + "' AND password = '" + pWord + "'";
        boolean logonValid = sv.Connect(query);

        //If the result set does not return a value the following
        //if statement will display the right error message
        if (logonValid == true) {
            this.setVisible(false);
            sv.sStartGUI();
        } else {
            JOptionPane.showMessageDialog(null, "Username or"
                    + " password incorrect",
                    "Login Error", JOptionPane.ERROR_MESSAGE);
            pswrdTB.setText("");
        }
    }//GEN-LAST:event_loginButtonActionPerformed
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton loginButton;
    private javax.swing.JLabel loginLabel;
    private javax.swing.JLabel pswordLabel;
    private javax.swing.JPasswordField pswrdTB;
    private javax.swing.JLabel usernameLabel;
    private javax.swing.JTextField usernameTB;
    // End of variables declaration//GEN-END:variables
}